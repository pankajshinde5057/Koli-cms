# Generated by Django 5.2 on 2025-08-04 12:15

import django.db.models.deletion
import django.utils.timezone
import main_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[(1, 'CEO'), (2, 'Manager'), (3, 'Employee')], default=1, max_length=1)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('profile_pic', models.ImageField(blank=True, upload_to='')),
                ('address', models.TextField()),
                ('fcm_token', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_second_shift', models.BooleanField(blank=True, default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', main_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('clock_in', models.DateTimeField(blank=True, null=True)),
                ('clock_out', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('present', 'Present'), ('late', 'Late'), ('half_day', 'Half Day'), ('absent', 'Absent'), ('leave', 'Leave')], default='present', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('total_worked', models.DurationField(blank=True, null=True)),
                ('regular_hours', models.DurationField(blank=True, null=True)),
                ('overtime_hours', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.department')),
            ],
        ),
        migrations.CreateModel(
            name='Break',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('break_type', models.CharField(choices=[('lunch', 'Lunch Break'), ('short', 'Short Break')], default='lunch', max_length=20)),
                ('break_start', models.DateTimeField()),
                ('break_end', models.DateTimeField(blank=True, null=True)),
                ('is_paid', models.BooleanField(default=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breaks', to='main_app.attendancerecord')),
            ],
            options={
                'ordering': ['break_start'],
            },
        ),
        migrations.CreateModel(
            name='DailySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('task_description', models.TextField()),
                ('project', models.CharField(blank=True, max_length=100)),
                ('justification', models.TextField(blank=True)),
                ('total_hours', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules', to='main_app.attendancerecord')),
            ],
            options={
                'ordering': ['-date', 'employee__admin__first_name'],
            },
        ),
        migrations.CreateModel(
            name='DailyUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_description', models.TextField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('justification', models.TextField(blank=True, default='')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='main_app.dailyschedule')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.division'),
        ),
        migrations.CreateModel(
            name='EarylyClockOutRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attendance_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='early_clock_out_requests', to='main_app.attendancerecord')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_early_clock_out_requests', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='early_clock_out_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('designation', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=10)),
                ('emergency_contact', models.JSONField(blank=True, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('aadhar_card', models.CharField(blank=True, max_length=12, null=True)),
                ('pan_card', models.CharField(blank=True, max_length=10, null=True)),
                ('bond_start', models.DateField(blank=True, null=True)),
                ('bond_end', models.DateField(blank=True, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.department')),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.division')),
            ],
        ),
        migrations.AddField(
            model_name='dailyschedule',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='main_app.employee'),
        ),
        migrations.CreateModel(
            name='EmployeeSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base', models.FloatField(default=0)),
                ('ctc', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.department')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('public', 'Public Holiday'), ('company', 'Company Holiday'), ('observance', 'Observance'), ('seasonal', 'Seasonal')], default='public', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Holidays',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='LeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('allocated_leaves', models.FloatField(default=0.0)),
                ('carried_forward', models.FloatField(default=0.0)),
                ('used_leaves', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to='main_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('Half-Day', 'Half-Day'), ('Full-Day', 'Full-Day')], default='Full-Day', max_length=100)),
                ('half_day_type', models.CharField(blank=True, choices=[('First Half', 'First Half'), ('Second Half', 'Second Half')], max_length=100, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('message', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_id', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('emergency_contact', models.JSONField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('aadhar_card', models.CharField(blank=True, max_length=12, null=True)),
                ('pan_card', models.CharField(blank=True, max_length=10, null=True)),
                ('bond_start', models.DateField(blank=True, null=True)),
                ('bond_end', models.DateField(blank=True, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='manager', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.department')),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.division')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('leave_type', models.CharField(choices=[('Half-Day', 'Half-Day'), ('Full-Day', 'Full-Day')], default='Full-Day', max_length=100)),
                ('half_day_type', models.CharField(blank=True, choices=[('First Half', 'First Half'), ('Second Half', 'Second Half')], max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('message', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.manager')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.manager')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='team_lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='main_app.manager'),
        ),
        migrations.CreateModel(
            name='ManagerLeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('allocated_leaves', models.FloatField(default=0.0)),
                ('carried_forward', models.FloatField(default=0.0)),
                ('used_leaves', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to='main_app.manager')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=56)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('notification_type', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('leave_or_notification_id', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.manager')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('clock_in', 'Clock In'), ('clock_out', 'Clock Out'), ('break_start', 'Break Start'), ('break_end', 'Break End'), ('status_change', 'Status Change'), ('correction', 'Time Correction'), ('verification', 'Verification')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.attendancerecord')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp'], name='main_app_ac_timesta_62f07f_idx'), models.Index(fields=['user', '-timestamp'], name='main_app_ac_user_id_cea2ce_idx'), models.Index(fields=['activity_type'], name='main_app_ac_activit_d0cc27_idx')],
            },
        ),
        migrations.CreateModel(
            name='AttendanceSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveSmallIntegerField()),
                ('year', models.PositiveSmallIntegerField()),
                ('total_days', models.PositiveSmallIntegerField()),
                ('present_days', models.PositiveSmallIntegerField()),
                ('absent_days', models.PositiveSmallIntegerField()),
                ('late_days', models.PositiveSmallIntegerField()),
                ('half_days', models.PositiveSmallIntegerField()),
                ('leave_days', models.PositiveSmallIntegerField()),
                ('total_worked', models.DurationField()),
                ('regular_hours', models.DurationField()),
                ('overtime_hours', models.DurationField()),
                ('total_breaks', models.DurationField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_summaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Attendance Summaries',
                'unique_together': {('user', 'month', 'year')},
            },
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['user', 'date'], name='main_app_at_user_id_a5c85c_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['date', 'department'], name='main_app_at_date_2f3cc3_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['status'], name='main_app_at_status_f7678d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendancerecord',
            unique_together={('user', 'date', 'clock_in')},
        ),
        migrations.AddIndex(
            model_name='earylyclockoutrequest',
            index=models.Index(fields=['user', 'submitted_at'], name='main_app_ea_user_id_5c44b0_idx'),
        ),
        migrations.AddIndex(
            model_name='earylyclockoutrequest',
            index=models.Index(fields=['status'], name='main_app_ea_status_88efd5_idx'),
        ),
        migrations.AddIndex(
            model_name='earylyclockoutrequest',
            index=models.Index(fields=['attendance_record'], name='main_app_ea_attenda_959524_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dailyschedule',
            unique_together={('employee', 'date')},
        ),
        migrations.AddIndex(
            model_name='leavebalance',
            index=models.Index(fields=['employee', 'year', 'month'], name='main_app_le_employe_1f3704_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='leavebalance',
            unique_together={('employee', 'year', 'month')},
        ),
        migrations.AddIndex(
            model_name='managerleavebalance',
            index=models.Index(fields=['manager', 'year', 'month'], name='main_app_ma_manager_d26f2a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='managerleavebalance',
            unique_together={('manager', 'year', 'month')},
        ),
    ]
